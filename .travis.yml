sudo: required

language: csharp

mono: none
dotnet: 2.0.0
dist: trusty

env:
    global:
        - FullVersion=$Version.$TRAVIS_BUILD_NUMBER ELASTIC_BEANSTALK_LABEL=$FullVersion

script:
    - dotnet restore ./src/Guilded/Guilded.csproj
    - dotnet build ./src/Guilded/Guilded.csproj -c Release
    - dotnet test ./test/Guilded.Tests/Guilded.Tests.csproj

after_success:
    # Download resources via bower and run gulpfile
    - cd ./src/Guilded
    - npm install
    - npm run bower install
    - npm run gulp scripts styles
    # Move bower resources to publish directory
    - mkdir -p ./obj/Docker/publish/wwwroot
    - mv ./wwwroot/lib ./obj/Docker/publish/wwwroot
    # dotnet publish output parameter is relative to project
    - dotnet publish -c Release -o ./obj/Docker/publish
    - rm ./obj/Docker/publish/wwwroot/css/**/*.less
    - rm ./obj/Docker/publish/wwwroot/js/**/*.ts
    # Run docker build for images
    - docker build -t bwolfing/guilded:dev-$FullVersion .
    - docker build -t bwolfing/guilded:dev-latest .
    # Push to docker hub
    - docker login -u="$DockerLogin" -p="$DockerPassword"
    - docker push bwolfing/guilded:dev-$FullVersion
    - docker push bwolfing/guilded:dev-latest
    # Return to project directory
    - cd ../../

before_deploy:
    # Remove all files that are not Dockerrun.aws.json
    - rm -rf -- !(Dockerrun.aws.json)
    - zip $FullVersion.zip Dockerrun.aws.json

# deploy:
#     skip_cleanup: true
#     provider: elasticbeanstalk
#     access-key-id: $AwsAccessKey
#     secret-access-key: 
#         secure: $AwsSecretKey
#     region: us-west-1
#     app: Guilded.me
#     env: selama-ashalanore
#     bucket_name: elasticbeanstalk-us-west-1-126711177368
#     zip_file: $FullVersion.zip
#     on:
#         condition: [ $TRAVIS_BUILD_NUMBER -eq 64 ]
#         branch: "feature/forums-area/edit-posts"
