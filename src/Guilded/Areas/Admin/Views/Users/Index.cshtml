@model PaginatedViewModel<ApplicationUserViewModel>
@{
    ViewData[ViewDataKeys.Title] = "Users";
    var pagerUrl = Url.Action("Index", "Users", new {area = "Admin"});
}

@section Styles {
    <environment names="Development">
        <link rel="stylesheet" href="css/admin/users.css"/>
    </environment>
    <environment names="Staging, Production">
        <link rel="stylesheet" href="css/admin/users.min.css" asp-append-version="true"/>
    </environment>
}

@section Scripts {
    <environment names="Development">
        <script src="js/admin/users.js"></script>
    </environment>
    <environment names="Staging, Production">
        <script src="js/admin/users.min.js"></script>
    </environment>
}

<h3>
    Users
</h3>

@{ await Html.SuccessAndErrorMessages(); }

@if (!Model.Models.Any())
{
    <div class="ui message">
        <h3>
            There are no users to display!
        </h3>
    </div>
}
else
{
    <guilded-pager pager-page="@Model.CurrentPage" pager-last-page="@Model.LastPage" pager-url="@pagerUrl"
                   pager-vertical-location="Top" />
    <table id="usersList" class="ui extra large striped celled table" data-enable-url="@Url.Action("EnableUser", "Users", new { area = "Admin", userId = "userId" })">
        <thead>
        <tr>
            <th>
                @Html.LabelFor(m => m.Models.FirstOrDefault().UserName)
            </th>
            <th>
                @Html.LabelFor(m => m.Models.FirstOrDefault().Email)
            </th>
            <th>
                @Html.LabelFor(m => m.Models.FirstOrDefault().Role)
            </th>
            <th>
                Actions
            </th>
        </tr>
        </thead>
        <tbody>
        @foreach (var user in Model.Models)
        {
            <tr class="@(!user.IsEnabled ? "disabled" : "") user" data-id="@user.Id"
                data-role-id="@user.RoleId" data-role-name="@user.Role">
                <td>
                    @Html.DisplayFor(m => user.UserName)
                </td>
                <td>
                    @Html.DisplayFor(m => user.Email)
                </td>
                <td>
                    @Html.DisplayFor(m => user.Role)
                </td>
                <td class="options">
                    <div class="ui small circular top left pointing dropdown icon button">
                        <i class="fa-ellipsis-h icon"></i>
                        <div class="menu">
                            <a class="item" asp-area="Admin"
                               asp-controller="Users" asp-action="Edit" asp-route-userId="@user.Id">
                                <i class="pencil icon"></i> Edit
                            </a>
                            <div class="item" data-change-role>
                                <i class="users icon"></i> Change role
                            </div>
                            <div class="item @(user.IsEnabled ? "hidden" : "")" data-enable-user>
                                <i class="green power icon"></i> Enable user
                            </div>
                            <div class="item @(user.IsEnabled ? "" : "hidden")" data-disable-user>
                                <i class="red power icon"></i> Disable user
                            </div>
                        </div>
                    </div>
                </td>
            </tr>
        }
        </tbody>
    </table>
    <guilded-pager pager-page="@Model.CurrentPage" pager-last-page="@Model.LastPage" pager-url="@pagerUrl"
                   pager-vertical-location="Bottom" />
}

<div id="disableUserModal" class="ui modal">
    <div class="header">
        Disable user
    </div>
    @{ await Html.RenderPartialAsync("DisableUserForm", new DisableUserViewModel()); }
</div>
<div id="changeRoleModal" class="ui modal">
    <div class="header">
        Change role
    </div>
    @{ await Html.RenderPartialAsync("ChangeRoleForm", new ChangeRoleViewModel()); }
</div>